{"version":3,"sources":["components/TabList.js","index.js"],"names":["tabsArr","name","class","Tab","state","open","props","init","handleClick","a","async","setState","updateOpen","index","changeColor","componentDidMount","populate","className","this","onClick","React","Component","TabList","tabs","addTabs","newTabs","prevState","updateOpenState","map","tab","i","sendColorChange","newColor","onChange","initState","onLoad","TabWrapper","color","ReactDOM","render","document","getElementById"],"mappings":"ySAIMA,EAAU,CACZ,CACIC,KAAU,WACVC,MAAU,kBAEd,CACID,KAAU,OACVC,MAAU,cAEd,CACID,KAAU,UACVC,MAAU,cAEd,CACID,KAAU,WACVC,MAAU,kBAEd,CACID,KAAU,WACVC,MAAU,mBAQZC,E,2MAEFC,MAAQ,CAEJC,KAAM,EAAKC,MAAMC,M,EAOrBC,YAAc,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAEJ,EAAKE,SAAS,CAACN,MAAM,KAFjB,yBAAAI,EAAA,MAGJ,EAAKH,MAAMM,WAAW,EAAKN,MAAMO,QAH7B,yBAAAJ,EAAA,MAIJ,EAAKH,MAAMQ,YAAY,EAAKR,MAAMO,QAJ9B,sC,EAWdE,kBAAoB,kBAAM,EAAKT,MAAMU,SAAX,iB,wEAQtB,OACI,yBACAC,UAAS,UAAKC,KAAKZ,MAAMJ,MAAhB,YAA0BgB,KAAKd,MAAMC,KAAO,OAAS,UAC9Dc,QAASD,KAAKV,aAEV,6BACKU,KAAKZ,MAAML,W,GApCdmB,IAAMC,WA+ClBC,E,2MAEFlB,MAAQ,CAEJmB,KAAM,I,EAOVC,QAAU,SAACC,GAAD,OAAa,EAAKd,UAAS,SAAAe,GAAS,MAAK,CAAEH,KAAK,GAAD,mBAAMG,EAAUH,MAAhB,CAAsBE,S,EAM/EE,gBAAkB,SAACd,GAEf,EAAKT,MAAMmB,KAAKK,KAAI,SAACC,EAAKC,GAEtB,OADGA,IAAMjB,GAAOgB,EAAIlB,SAAS,CAACN,MAAM,KAC7B,M,EAQf0B,gBAAkB,SAAClB,GAEf,IAAMmB,EAAW,EAAK5B,MAAMmB,KAAKV,GAAOP,MAAMJ,MAC9C,EAAKI,MAAM2B,SAASD,I,wEAOd,IAAD,OAECE,EAAY,SAACJ,GAAD,OAAa,IAANA,GAEzB,OAEI,yBAAKb,UAAU,qBAAqBkB,OAAQjB,KAAKM,SAC3CxB,EAAQ4B,KAAI,SAACC,EAAKC,GAAN,OAAY,kBAAC,EAAD,CAAKhB,YAAa,EAAKiB,gBAClBnB,WAAY,EAAKe,gBACjBX,SAAU,EAAKQ,QACfjB,KAAM2B,EAAUJ,GAChBjB,MAAOiB,EACP5B,MAAO2B,EAAI3B,MACXD,KAAM4B,EAAI5B,e,GApDnCmB,IAAMC,WAiGbe,E,2MAjCXhC,MAAQ,CAEJiC,MAAO,kB,EAOXvB,YAAc,SAACkB,GAEX,EAAKrB,SAAS,CAAC0B,MAAOL,K,wEAStB,OAEI,6BACI,kBAAC,EAAD,CAASC,SAAUf,KAAKJ,cACxB,yBAAKG,UAAS,4BAAuBC,KAAKd,MAAMiC,MAAlC,oC,GA1BLjB,IAAMC,WCvI/BiB,IAASC,OAAO,kBAAC,EAAD,MAAgBC,SAASC,eAAe,iB","file":"static/js/main.3ee68133.chunk.js","sourcesContent":["import React from \"react\";\n\n\n\nconst tabsArr = [\n    {\n        name    : \"Assigned\",\n        class   : \"color-assigned\",\n    },\n    {\n        name    : \"Open\",\n        class   : \"color-open\",\n    },\n    {\n        name    : \"On Hold\",\n        class   : \"color-hold\",\n    },\n    {\n        name    : \"Complete\",\n        class   : \"color-complete\",\n    },\n    {\n        name    : \"Rejected\",\n        class   : \"color-rejected\",\n    }\n]\n\n\n\n\n\nclass Tab extends React.Component {\n\n    state = {\n\n        open: this.props.init\n    }\n\n\n    // Handle changes when tab is clicked.\n\n\n    handleClick = async () => {\n\n        await this.setState({open: true});\n        await this.props.updateOpen(this.props.index);\n        await this.props.changeColor(this.props.index);\n    }\n    \n\n    // Send data to TabList state when each tab mounts.\n\n\n    componentDidMount = () => this.props.populate(this);\n\n\n\n\n\n    render() {\n\n        return(\n            <div \n            className={`${this.props.class} ${ this.state.open ? \"open\" : \"closed\"}`}\n            onClick={this.handleClick}\n            >\n                <div>\n                    {this.props.name}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\n\nclass TabList extends React.Component {\n\n    state = {\n\n        tabs: []\n    }\n\n\n    // Add rendered tabs to state array.\n\n\n    addTabs = (newTabs) => this.setState(prevState => ({ tabs: [...prevState.tabs, newTabs]}) );\n\n\n    // Update other tabs when new tab is open.\n\n\n    updateOpenState = (index) => {\n\n        this.state.tabs.map((tab, i) => {\n            if(i !== index) tab.setState({open: false});\n            return true;\n        });\n    }\n\n\n    // Send colour change to bar.\n\n\n    sendColorChange = (index) => {\n\n        const newColor = this.state.tabs[index].props.class;\n        this.props.onChange(newColor);\n    }\n\n\n\n\n\n    render() {\n\n        const initState = (i) => i === 0 ? true : false;\n\n        return (\n            \n            <div className=\"task-display__tabs\" onLoad={this.addTabs}>\n                { tabsArr.map((tab, i) => <Tab changeColor={this.sendColorChange} \n                                               updateOpen={this.updateOpenState} \n                                               populate={this.addTabs} \n                                               init={initState(i)} \n                                               index={i} \n                                               class={tab.class} \n                                               name={tab.name} />) }\n            </div>\n        );\n    }\n}\n\n\n\n\n\nclass TabWrapper extends React.Component {\n\n    state = {\n\n        color: \"color-assigned\"\n    }\n\n\n    // Change color of bar to match open tab.\n\n\n    changeColor = (newColor) => {\n\n        this.setState({color: newColor});\n    }\n\n\n\n\n\n    render() {\n\n        return(\n\n            <div>\n                <TabList onChange={this.changeColor}/>\n                <div className={`task-display__top ${this.state.color} inner-shadow-bottom-tiny`}>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\n\nexport default TabWrapper;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport TabWrapper from \"./components/TabList\";\n\nReactDOM.render(<TabWrapper />, document.getElementById(\"react-tabs\"));\n"],"sourceRoot":""}