{"version":3,"sources":["reducers/taskReducer.js","reducers/rootReducer.js","store.js","components/Modal.js","actions/taskActions.js","components/contexts/ModalContext.js","components/AddTaskModal.js","components/AddTaskButton.js","components/TabList.js","components/TaskList.js","components/TaskDisplay.js","components/StatsDisplay.js","components/MainWindowInner.js","index.js"],"names":["initialState","description","userAssigned","dateAssigned","dateDeadline","isOpen","important","isOptional","taskReducer","state","action","type","payload","combineReducers","tasks","configureStore","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ModalBackdrop","openClass","props","show","applyClass","newClass","setTimeout","setState","prevState","removeClass","componentDidUpdate","prevProps","render","ReactDOM","createPortal","className","style","width","onClick","hide","children","document","body","Component","addTask","task","dispatch","ModalContext","React","createContext","ModalProvider","showModal","hideModal","e","preventDefault","Provider","value","AddTaskModal","newTask","Date","now","store","context","handleChange","newData","update","target","name","$set","checked","handleSubmit","htmlFor","placeholder","onChange","defaultValue","Consumer","contextType","ReactReduxContext","connect","AddTaskButton","tabsArr","class","Tab","open","init","handleClick","a","async","updateOpen","index","changeColor","componentDidMount","populate","this","TabList","tabs","addTabs","newTabs","updateOpenState","map","tab","i","sendColorChange","newColor","onLoad","TabWrapper","color","TaskStarIcon","hold","TaskDateIcon","Task","status","desc","assignedTo","TaskList","setInterval","getState","TaskDisplay","StatsDisplay","MainWindowInner","getElementById"],"mappings":"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","file":"static/js/main.02727cc8.chunk.js","sourcesContent":["const initialState = [\n    \n    {\n        description     : \"Description of task and what needs to be done.\",\n        userAssigned    : \"User Name\",\n        dateAssigned    : \"...\",\n        dateDeadline    : \"...\",\n        isOpen          : false,\n        important       : true\n    },\n    {\n        description     : \"Another desciption of a task which needs doing. The star being orange shows this one is open.\",\n        userAssigned    : \"User Name\",\n        dateAssigned    : \"...\",\n        dateDeadline    : \"...\",\n        isOpen          : true,\n        isOptional      : false\n    }\n    \n]\n\nconst taskReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n\n        case \"ADD_TASK\": {\n            \n            return state = [...state, action.payload];\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport default taskReducer;","import { combineReducers } from \"redux\";\n\nimport taskReducer from \"./taskReducer\";\n\nexport default combineReducers({\n\n    tasks: taskReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\n\nconst configureStore = () => {\n\n    return createStore(\n\n        rootReducer,\n\n        compose(\n            applyMiddleware(thunk),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n        \n    );\n}\n\nexport default configureStore;","import React, { Component, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n\nclass ModalBackdrop extends Component {\n\n    state = {\n\n        openClass   : \"modal-backdrop\",\n\n        isOpen      : this.props.show\n    }\n\n    applyClass = (newClass) => setTimeout(() => this.setState(prevState => ({ ...prevState, openClass: `${prevState.openClass} ${newClass}` })), 10);\n\n    removeClass = () => this.setState({openClass: \"modal-backdrop\"});\n\n    componentDidUpdate = (prevProps) => {\n\n        if(this.props.show !== prevProps.show) {\n   \n            if(this.props.show) {\n\n                this.applyClass(\"modal-open\");\n                this.setState({isOpen: this.props.show});\n\n            } else {\n\n                this.applyClass(\"modal-fade\");\n\n                setTimeout(() => {\n                    \n                    this.setState({isOpen: this.props.show})\n                    this.removeClass();\n\n                }, 1000);\n            }\n        }\n    }\n\n    render = () => {\n\n        if(!this.state.isOpen) {\n\n            return null;\n\n        } else {\n\n            return ReactDOM.createPortal(\n\n                <Fragment>\n                \n                    <div className={this.state.openClass}>\n                        \n                        <div className=\"modal-backdrop__window\" style={{width: this.props.width}}>\n\n                            <span onClick={this.props.hide} className=\"modal-backdrop__window-closebtn\">&times;</span>\n\n                            {this.props.children}\n                        </div>\n\n                    </div>\n\n                </Fragment>\n\n                ,\n                document.body\n            );\n        }\n    }\n}\n\nexport { ModalBackdrop };","const addTask = (task = {}) => dispatch => {\n\n    dispatch({\n\n        type    : \"ADD_TASK\",\n        payload : task\n    });\n}\n\nexport { addTask };","import React, { Component } from \"react\";\n\nconst ModalContext = React.createContext();\n\nclass ModalProvider extends Component {\n\n\tstate = {\n\n\t\tshowModal: false\n\t}\n\n\tshowModal = () => {\n\n\t\tthis.setState({\n\t\t\tshowModal: true\n\t\t});\n\t}\n\n\thideModal = (e) => {\n\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\tshowModal: false\n\t\t});\n\t}\n\n\trender = () => {\n\n\t\treturn (\n\n\t\t\t<ModalContext.Provider value = {\n\t\t\t\t{\n\n\t\t\t\t\tstate: this.state,\n\n\t\t\t\t\tshowModal: this.showModal,\n\n\t\t\t\t\thideModal: this.hideModal,\n\n\t\t\t\t}\n\t\t\t} >\n\n\t\t\t{\n\t\t\t\tthis.props.children\n\t\t\t}\n\n\t\t\t</ModalContext.Provider>\n\t\t);\n\t}\n}\n\nexport {\n\tModalProvider,\n\tModalContext\n};","// React Imports\n\nimport React, { Component, Fragment } from \"react\";\n\n// Redux Imports\n\nimport { connect, ReactReduxContext } from \"react-redux\";\n\nimport { addTask } from \"../actions/taskActions\";\n\n// Context Imports\n\nimport { ModalContext } from \"./contexts/ModalContext\";\n\n// Component Imports\n\n\n// Other Imports\n\nimport update from \"immutability-helper\";\n\n\n\nclass AddTaskModal extends Component {\n\n    state = {\n\n        newTask: {\n\n            description     : \"\",\n            userAssigned    : \"\",\n            dateAssigned    : Date.now(),\n            dateDeadline    : \"\",\n            isOpen          : false,\n            important       : false\n        }\n    }\n\n    static contextType = ReactReduxContext;\n\n    store = this.context.store;\n\n    handleChange = (e) => {\n\n        const newData = update(this.state.newTask, {\n\n            [e.target.name]: { $set: e.target.type === \"checkbox\" ? e.target.checked : e.target.value }\n        });\n\n        this.setState({newTask: newData});\n\n    }\n\n    handleSubmit = (e) => {\n                \n        e.preventDefault();\n\n        this.props.addTask(this.state.newTask);\n\n    }\n\n    render = () => {\n\n        return (\n\n            <div className=\"add-task-wrapper\">\n                <form className=\"form\">\n                    <div className=\"form__top\">\n\n                        <div className=\"form__field column\" >\n\n                            <label htmlFor=\"description\">Task Description</label>\n\n                            <textarea name=\"description\" value={this.state.description} placeholder=\"...\" onChange={this.handleChange}></textarea>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"form__bottom\">\n\n                        <div className=\"form__field column\" >\n\n                            <label htmlFor=\"userAssigned\">Assign To</label>\n\n                            <select name=\"userAssigned\" value={this.state.userAssigned} placeholder=\"Choose User\" onChange={this.handleChange}>\n\n                                <option value=\"unassigned\" defaultValue>Unassigned</option>\n                                <option value=\"user1\">User 1</option>\n                                <option value=\"user2\">User 2</option>\n                                <option value=\"user3\">User 3</option>\n\n                            </select>\n\n                        </div>\n\n                        <div className=\"form__field column\">\n\n                            <label htmlFor=\"dateDeadline\">Due Date</label>\n                            \n                            <input type=\"date\" value={this.state.dateDeadline} name=\"dateDeadline\" onChange={this.handleChange}/>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"form__check\">\n\n                        <div className=\"form__field row\">\n\n                            <input type=\"checkbox\" name=\"important\" value={this.state.important} onChange={this.handleChange}/>\n\n                            <label htmlFor=\"important\">Check to mark this task as important.</label>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"form__submit\">\n\n                        <ModalContext.Consumer>\n\n                            {(context) => (\n\n                                <Fragment>\n\n                                    <button onClick={(e) => context.hideModal(e)}>Cancel</button>\n\n                                    <button onClick={(e) => { this.handleSubmit(e); context.hideModal(e)}}>Assign</button>\n\n                                </Fragment>\n\n                            )}\n\n                        </ModalContext.Consumer>\n\n                    </div>\n                </form>\n            </div>\n            \n        );\n    }\n}\n\n\n\nconst mapStateToProps = state => ({\n\n    ...state,\n})\n\n\n\nconst mapDispatchToProps = dispatch => ({\n\n    addTask: (task = {}) => dispatch(addTask(task))\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskModal);","import React, { Component } from \"react\";\n\nimport { ModalBackdrop } from \"./Modal\";\nimport AddTaskModal from \"./AddTaskModal\"\n\nimport { ModalContext } from \"./contexts/ModalContext\"\n\n\n\nclass AddTaskButton extends Component {\n\n    static contextType = ModalContext;\n\n    render = () => {\n\n        return (\n    \n                <div className=\"add-task-icon\">\n\n                    <i onClick={this.context.showModal} className=\"fas fa-plus-circle\"></i>\n\n                    <ModalBackdrop show={this.context.state.showModal} hide={this.context.hideModal} children={<AddTaskModal />} width=\"50rem\"/>\n\n                </div>\n\n        );\n    }\n}\n\nexport default AddTaskButton;","import React, { Component, Fragment } from \"react\";\nimport AddTaskButton from \"./AddTaskButton\";\n\nimport { ModalProvider } from \"./contexts/ModalContext\";\n\n\n\nconst tabsArr = [\n    {\n        name    : \"Assigned\",\n        class   : \"color-assigned\",\n    },\n    {\n        name    : \"Open\",\n        class   : \"color-open\",\n    },\n    {\n        name    : \"On Hold\",\n        class   : \"color-hold\",\n    },\n    {\n        name    : \"Complete\",\n        class   : \"color-complete\",\n    },\n    {\n        name    : \"Rejected\",\n        class   : \"color-rejected\",\n    }\n]\n\n\n\n\n\nclass Tab extends Component {\n\n    state = {\n\n        open: this.props.init\n    }\n\n\n    // Handle changes when tab is clicked.\n\n\n    handleClick = async () => {\n\n        await this.setState({open: true});\n        await this.props.updateOpen(this.props.index);\n        await this.props.changeColor(this.props.index);\n    }\n    \n\n    // Send data to TabList state when each tab mounts.\n\n\n    componentDidMount = () => this.props.populate(this);\n\n\n\n\n\n    render() {\n\n        return(\n            <div \n            className={`${this.props.class} ${ this.state.open ? \"open\" : \"closed\"}`}\n            onClick={this.handleClick}\n            >\n                <div>\n                    {this.props.name}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\n\nclass TabList extends Component {\n\n    state = {\n\n        tabs: []\n    }\n\n\n    // Add rendered tabs to state array.\n\n\n    addTabs = (newTabs) => this.setState(prevState => ({ tabs: [...prevState.tabs, newTabs]}) );\n\n\n    // Update other tabs when new tab is open.\n\n\n    updateOpenState = (index) => {\n\n        this.state.tabs.map((tab, i) => {\n            if(i !== index) tab.setState({open: false});\n            return true;\n        });\n    }\n\n\n    // Send colour change to bar.\n\n\n    sendColorChange = (index) => {\n\n        const newColor = this.state.tabs[index].props.class;\n        this.props.onChange(newColor);\n    }\n\n\n\n\n\n    render() {\n\n        const initState = (i) => i === 0 ? true : false;\n\n        return (\n            \n            <div className=\"task-display__tabs\" onLoad={this.addTabs}>\n                { tabsArr.map((tab, index) => <Tab changeColor={this.sendColorChange} \n                                               updateOpen={this.updateOpenState} \n                                               populate={this.addTabs} \n                                               init={initState(index)} \n                                               index={index} \n                                               class={tab.class} \n                                               name={tab.name} />) }\n            </div>\n        );\n    }\n}\n\n\n\n\n\nclass TabWrapper extends Component {\n\n    state = {\n\n        color: \"color-assigned\"\n    }\n\n    // Change color of bar to match open tab.\n\n    changeColor = (newColor) => {\n\n        this.setState({color: newColor});\n    }\n\n    render() {\n\n        return(\n\n            <Fragment>\n                <TabList onChange={this.changeColor}/>\n                <div className={`task-display__top ${this.state.color} inner-shadow-bottom-tiny`}>\n\n                    <ModalProvider>\n                        <AddTaskButton />\n                    </ModalProvider>\n                    \n                </div>\n            </Fragment>\n            \n        );\n    }\n}\n\n\n\nexport default TabWrapper;","import React, { Component } from \"react\";\n\nimport { connect, ReactReduxContext } from \"react-redux\";\n\n\n\nclass TaskStarIcon extends Component {\n\n\n\n    state = {\n\n        open: this.props.isOpen,\n        hold: false\n    }\n\n\n\n    render() {\n\n        return(\n\n            <div className={`task__body-star ${this.state.open ? \"star-active\" : \"star-inactive\"}`}>\n                <i className=\"fas fa-star\"></i>\n            </div>\n        );\n    }\n}\n\n\n\nconst TaskDateIcon = () => {\n\n    return(\n\n        <div className=\"task__body-date\">\n            <i className=\"far fa-calendar-alt\"></i>\n        </div>\n    );\n}\n\n\n\n// class TaskDateModal extends Component {\n\n//     render() {\n\n//         return(\n\n\n//         );\n//     }    \n// }\n\n\n\nclass Task extends Component {\n\n    state = {\n\n        status: {\n\n            open        : this.props.isOpen,\n            hold        : false,\n            important   : this.props.important\n        }\n    }\n\n    render() {\n\n        return(\n\n            <div className=\"task inner-shadow-bottom-tiny\">\n\n\n                <div className=\"task__complete closed\">\n                <div className=\"closed\">Complete</div>\n                </div>\n                \n\n                <div className=\"task__body\">\n\n                <div className=\"task__body-top\">\n                    <div className=\"task__body-desc\">\n                    {this.props.desc}\n                    </div>\n                    <TaskStarIcon isOpen={this.props.isOpen}/>\n                </div>\n                \n                <div className=\"task__body-bottom\">\n                    <div className=\"task__body-user\">\n                    <i className=\"fas fa-user-circle\"></i>\n                    <span className=\"user-name\">{this.props.assignedTo}</span>\n                    </div>\n                    <TaskDateIcon />\n                </div>\n\n                </div>\n\n\n                <div className={`${ this.state.status.important ? \"task__inactive\" : \"task__reject\"} closed`}>\n                <div className=\"\">Reject</div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\n\nclass TaskList extends Component {\n\n    state = {   \n\n        tasks: []\n    }\n\n    static contextType = ReactReduxContext;\n\n    store = this.context.store;\n\n    componentDidMount = () => {\n\n        setInterval(() => this.setState({tasks: [...this.store.getState().tasks]}), 1000);\n    }\n\n\n    render() {\n\n        return(\n\n                <div className=\"task-display__main\">\n                    { this.state.tasks.map((task, index) => (\n\n                        <Task desc={task.description} \n                                    assignedTo={task.userAssigned}\n                                    isOpen={task.isOpen}\n                                    important={task.important} />\n\n                    ))}\n                </div>\n\n\n        );\n    }\n}\n\n\n\nexport default connect()(TaskList);","import React, { Component } from \"react\";\nimport TabWrapper from \"./TabList\";\nimport TaskList from \"./TaskList\";\n\n\nclass TaskDisplay extends Component {\n\n    render() {\n\n        return(\n\n                <div className=\"task-display\">\n                    \n                    <TabWrapper />\n\n                    <TaskList />\n                    \n                </div>\n            \n        );\n    }\n}\n\nexport default TaskDisplay;","import React, { Component, Fragment } from \"react\";\n\n\nclass StatsDisplay extends Component {\n\n    render() {\n\n\n        return(\n\n            <Fragment>\n                <div className=\"stats-display\">\n\n                    Stats will go here...\n\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default StatsDisplay;","import React, { Component, Fragment } from \"react\";\nimport TaskDisplay from \"./TaskDisplay\";\nimport StatsDisplay from \"./StatsDisplay\";\n\n\n\nclass MainWindowInner extends Component {\n\n    render() {\n\n        return( \n\n            <Fragment>\n\n                <TaskDisplay />\n\n                <StatsDisplay />\n\n            </Fragment>\n\n        );\n    }\n}\n\nexport default MainWindowInner;","// React Imports\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux Imports\n\nimport { Provider } from \"react-redux\";\n\nimport configureStore from \"./store\";\n\n// Component Imports\n\nimport MainWindowInner from \"./components/MainWindowInner\";\n\n// Style Imports\n\nimport './css/index.css';\n\n// Render\n\nReactDOM.render(\n\n    <Provider store={configureStore()}>\n        <MainWindowInner />\n    </Provider>\n    \n    , document.getElementById(\"react-mainWindowInner\"));\n"],"sourceRoot":""}